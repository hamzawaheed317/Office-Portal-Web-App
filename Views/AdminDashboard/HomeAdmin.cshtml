@model OfficePortal.Models.Admin_Models.AdminViewModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>

    <!-- Bootstrap CSS for responsive layout and styling -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">

    <!-- Custom CSS for tailored styles -->
    <style>
        body {
            padding: 20px;
        }

        .add-announcement-container {
            margin-bottom: 10px;
            display: flex;
            justify-content: flex-end;
        }

        .announcements-container {
            max-width: 600px; /* Reduced width */
            margin-left: 20px; /* Slightly left aligned for better aesthetics */
            overflow-y: auto; /* Enables scrollable content if necessary */
            max-height: 400px; /* Reduced height */
            border: 1px solid #dee2e6; /* Optional: Add border for better visibility */
            border-radius: 8px; /* Optional: Rounded corners */
            padding: 10px; /* Reduced padding for a more compact look */
            background-color: #f8f9fa; /* Optional: Light background color */
        }

        .announcement-card {
            background-color: #ffffff; /* Card background */
            border-radius: 8px;
            padding: 10px; /* Reduced padding */
            margin-bottom: 10px; /* Reduced margin */
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1); /* Subtle shadow for depth */
            width: 100%; /* Make card fill the container */
        }

        .request-counts {
            display: flex;
            justify-content: space-around;
            margin-bottom: 20px;
        }

        .request-card {
            text-align: center;
            padding: 20px;
            border: 1px solid #007bff;
            border-radius: 8px;
            width: 30%;
        }

            .request-card a {
                text-decoration: none; /* Remove underline for cleaner look */
                color: inherit; /* Inherit text color */
            }

            .request-card:hover {
                cursor: pointer;
                background-color: #e9ecef; /* Light background on hover */
            }

        .like-comment-section {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .add-comment-section {
            display: flex;
            margin-top: 10px; /* Space between sections */
        }

        .comment-input {
            flex: 1;
            margin-right: 10px; /* Space between input and button */
        }

        .announcement-footer {
            margin-top: 10px; /* Reduced margin for footer */
        }

        /* Additional media styles */
        .announcement-image {
            width: 100%; /* Makes the image responsive */
            height: auto; /* Maintains aspect ratio */
            max-height: 200px; /* Restricts height for uniformity */
            object-fit: cover; /* Ensures image covers area without distortion */
            border-radius: 5px; /* Slight rounding for aesthetics */
            margin-top: 10px; /* Spacing above the image */
        }

        .announcement-video {
            width: 100%; /* Makes the video responsive */
            height: auto; /* Maintains aspect ratio */
            max-height: 200px; /* Restricts height for uniformity */
            border-radius: 5px; /* Slight rounding for aesthetics */
            margin-top: 10px; /* Spacing above the video */
        }

        .see-all-announcements {
            margin-top: 20px;
            text-align: center;
        }
    </style>
</head>
<body>
    <!-- Request Counts Section -->
    <div class="request-counts">
        <div class="request-card">
            <a asp-action="FormRequestAdminPage" asp-controller="AdminDashboard">
                <h4>Form Requests</h4>
                <p class="count">@Model.form_requests_count</p>
            </a>
        </div>
        <div class="request-card">
            <a asp-action="GetPendingComments" asp-controller="AdminDashboard">
                <h4>Comment Requests</h4>
                <p class="count">@Model.comment_requests_count</p>
            </a>
        </div>
        <div class="request-card">
            <a asp-action="InitiativeRequests" asp-controller="Announcements">
                <h4>Initiative Requests</h4>
                <p class="count">@Model.initative_requests_count</p>
            </a>
        </div>
    </div>

    <!-- Add Announcement Form -->
    <h4>Create Announcement</h4>
    <div class="add-announcement-container">
        <form id="announcementForm" asp-action="Create" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="announcement.Content" class="control-label"></label>
                <input asp-for="announcement.Content" class="form-control" />
                <span asp-validation-for="announcement.Content" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="announcement.FileUrl" class="control-label"></label>
                <input type="file" asp-for="announcement.FileUrl" class="form-control" />
                <span asp-validation-for="announcement.FileUrl" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#announcementForm').submit(function (e) {
                e.preventDefault(); 

                var formData = new FormData(this);

                $.ajax({
                    url: '@Url.Action("Create", "AdminDashboard")',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        if (response.success) {
                            alert("Success: " + response.message);
                            $('#announcementForm')[0].reset(); 
                        } else {
                            alert("Error: " + response.message);
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert("An unexpected error occurred: " + textStatus + " - " + errorThrown);
                        console.error("Error details:", jqXHR.responseText); // Log response for debugging
                    }
                });
            });
        });

    </script>

    <!-- Add Bootstrap JavaScript for dismissing the alert -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

    <!-- Announcements List -->
    <div class="panel">
        <div class="see-all-announcements">
            <a asp-action="Index" asp-controller="Announcements">See All Announcements</a>
        </div>
        <h2>Announcements</h2>
    </div>
    <div class="announcements-container">
        @foreach (var announcement in Model.announcements)
        {
            <div class="announcement-card">
                <div class="announcement-header">
                    <div class="author-info">
                        <img src="~/images/default-profile.png" alt="Author Profile" class="author-profile" />
                        <span class="author-name">@announcement.Author</span>
                        <span class="posted-date">@announcement.PostedDate.ToString("MMMM dd HH:mm")</span>
                    </div>
                </div>

                <div class="announcement-content">
                    <p>@announcement.Content</p>

                    <!-- Display media based on file type -->
                    @if (!string.IsNullOrEmpty(announcement.FileUrl))
                    {
                        if (announcement.FileUrl.EndsWith(".jpg") || announcement.FileUrl.EndsWith(".png") || announcement.FileUrl.EndsWith(".jpeg"))
                        {
                            <img src="@Url.Content("~/uploads/" + announcement.FileUrl)" alt="Announcement Image" class="announcement-image" />
                        }
                        else if (announcement.FileUrl.EndsWith(".mp4"))
                        {
                            <video controls class="announcement-video">
                                <source src="@Url.Content("~/uploads/" + announcement.FileUrl)" type="video/mp4">
                                Your browser does not support the video tag.
                            </video>
                        }
                    }
                </div>

                <!-- Footer with like and comment functionality -->
                <div class="announcement-footer">
                    <div class="like-comment-section">
                        <span class="like-count">@announcement.LikesCount Likes</span>
                        <a href="#" class="like-btn" data-announcement-id="@announcement.Id">
                            <i class="heart-icon">&#9829;</i> <!-- Heart icon for liking -->
                        </a>
                        <a href="#" class="view-comments" data-announcement-id="@announcement.Id">View Comments</a>
                    </div>

                    <div class="add-comment-section">
                        <input type="text" class="form-control comment-input" placeholder="Add a comment" data-announcement-id="@announcement.Id" />
                        <button class="btn btn-primary post-comment-btn" data-announcement-id="@announcement.Id">Post</button>
                    </div>
                </div>

                <!-- Hidden comments section; revealed upon interaction -->
                <div class="comments-section" id="comments-@announcement.Id">
                    <!-- Comments will be loaded via Ajax -->
                </div>
            </div>
        }
    </div>

    <!-- jQuery for interactivity -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            // Toggle comment visibility
            $('.view-comments').on('click', function (e) {
                e.preventDefault();
                const announcementId = $(this).data('announcement-id');
                const commentsSection = $('#comments-' + announcementId);

                commentsSection.toggle();

                if (commentsSection.is(':visible')) {
                    // Load comments via Ajax if section is visible
                    const loadCommentsUrl = '@Url.Action("GetComments", "Announcements")';
                    $.get(loadCommentsUrl, { announcementId: announcementId }, function (data) {
                        commentsSection.html(data);
                    }).fail(function () {
                        console.error("Failed to load comments.");
                    });
                }
            });

            // Handle posting a comment
            $('.post-comment-btn').on('click', function () {
                const announcementId = $(this).data('announcement-id');
                const commentInput = $(this).closest('.add-comment-section').find('.comment-input');
                const commentText = commentInput.val().trim();

                if (!commentText) return; // Exit if input is empty

                const commentData = {
                    AnnouncementId: announcementId,
                    Content: commentText,
                    Author: 'hw' // Static author name for demo purposes
                };

                const postCommentUrl = '@Url.Action("Post_Comment", "Announcements")';
                $.ajax({
                    type: "POST",
                    url: postCommentUrl,
                    data: JSON.stringify(commentData),
                    contentType: "application/json",
                    success: function (response) {
                        if (response.success) {
                            alert(response.message);

                            // Clear comment input
                            commentInput.val('');

                            // Optionally refresh comments section
                            $('#comments-' + announcementId).append('<div>' + commentText + '</div>');


                            location.reload();


                        } else {
                            alert("Failed to post comment.");
                        }
                    },
                    error: function () {
                        console.error("Error posting comment.");
                    }
                });
            });
        });

            $(document).ready(function () {
                $('input[type="file"]').on('change', function () {
                    var fileInput = $(this);
                    var filePath = fileInput.val();
                    var allowedExtensions = /(\.jpg|\.jpeg|\.png|\.mp4)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        alert("Only image files (.jpg, .png) or video files (.mp4) are allowed.");
                        fileInput.val(''); 
                        return false;
                    }
                });
            });

    </script>
</body>
</html>
