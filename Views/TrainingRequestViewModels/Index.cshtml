@model IEnumerable<OfficePortal.Models.Employee_Models.TrainingRequestViewModel>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <button class="btn btn-primary" data-toggle="modal" data-target="#createModal">Create New</button>
</p>

<table class="table table-striped">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.EmployeeName)</th>
            <th>@Html.DisplayNameFor(model => model.JobTitle)</th>
            <th>@Html.DisplayNameFor(model => model.Grade)</th>
            <th>@Html.DisplayNameFor(model => model.Number)</th>
            <th>@Html.DisplayNameFor(model => model.Department)</th>
            <th>@Html.DisplayNameFor(model => model.LineManager)</th>
            <th>@Html.DisplayNameFor(model => model.Type)</th>
            <th>@Html.DisplayNameFor(model => model.TrainingEntity)</th>
            <th>@Html.DisplayNameFor(model => model.DateFrom)</th>
            <th>@Html.DisplayNameFor(model => model.DateTo)</th>
            <th>@Html.DisplayNameFor(model => model.Location)</th>
            <th>@Html.DisplayNameFor(model => model.Amount)</th>
            <th>@Html.DisplayNameFor(model => model.status)</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)

        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.EmployeeName)</td>
                <td>@Html.DisplayFor(modelItem => item.JobTitle)</td>
                <td>@Html.DisplayFor(modelItem => item.Grade)</td>
                <td>@Html.DisplayFor(modelItem => item.Number)</td>
                <td>@Html.DisplayFor(modelItem => item.Department)</td>
                <td>@Html.DisplayFor(modelItem => item.LineManager)</td>
                <td>@Html.DisplayFor(modelItem => item.Type)</td>
                <td>@Html.DisplayFor(modelItem => item.TrainingEntity)</td>
                <td>@Html.DisplayFor(modelItem => item.DateFrom)</td>
                <td>@Html.DisplayFor(modelItem => item.DateTo)</td>
                <td>@Html.DisplayFor(modelItem => item.Location)</td>
                <td>@Html.DisplayFor(modelItem => item.Amount)</td>
                <td>@Html.DisplayFor(modelItem => item.status)</td>
                <td>
                    <button class="btn btn-info details-btn" data-id="@item.id" data-toggle="modal" data-target="#detailsModal">Details</button>
                    <a asp-action="Delete" asp-route-id="@item.id" class="btn btn-danger">Delete</a>
                    @if (item.status == "Rejected" || item.status == "Pending...")
                    {
                        <a asp-action="Edit" asp-route-id="@item.id" class="btn btn-warning">Edit</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Create Modal -->
<div class="modal fade" id="createModal" tabindex="-1" role="dialog" aria-labelledby="createModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createModalLabel">Create Training Request</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="createContent" class="create-content"></div> <!-- Container for the partial view -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Details Modal -->
<div class="modal fade" id="detailsModal" tabindex="-1" role="dialog" aria-labelledby="detailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="detailsModalLabel">Training Request Details</h5>
            </div>
            <div class="modal-body">
                <div id="detailsContent" class="details-content"></div> <!-- Custom class for styling -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<style>
    /* Custom styles for the create content */
    .create-content {
        padding: 20px; /* Adjust padding as needed */
    }

    /* Custom styles for the details content */
    .details-content {
        padding: 20px; /* Adjust padding as needed */
    }

        .details-content p {
            margin-bottom: 15px; /* Add space between labels and data */
            font-weight: bold; /* Make labels bold for emphasis */
        }

        .details-content span {
            font-weight: normal; /* Normal weight for data */
            padding-left: 10px; /* Add space between label and data */
        }

    /* Modal size */
    .modal-lg {
        max-width: 70%; /* Adjust modal width */
    }
</style>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>

    <script>
        $(document).ready(function () {
            // Load create form into the modal
            $('#createModal').on('show.bs.modal', function () {
                $.ajax({
                    url: '@Url.Action("Create", "TrainingRequestViewModels")', // Adjust to your actual controller name
                    type: 'GET',
                    success: function (data) {
                        $('#createContent').html(data);
                    },
                    error: function () {
                        $('#createContent').html('<p>An error occurred while loading the create form.</p>');
                    }
                });
            });

            // Load details into the details modal
            $('.details-btn').on('click', function () {
                var id = $(this).data('id');
                $.ajax({
                    url: '@Url.Action("Details", "TrainingRequestViewModels")', // Adjust to your actual controller name
                    type: 'GET',
                    data: { id: id },
                    success: function (data) {
                        $('#detailsContent').html(data);
                    },
                    error: function () {
                        $('#detailsContent').html('<p>An error occurred while loading details.</p>');
                    }
                });
            });
        });
    </script>
}
